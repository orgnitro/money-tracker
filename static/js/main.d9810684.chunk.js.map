{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","components/Header.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","components/Chart.js","App.js","index.js"],"names":["AppReducer","state","action","type","transactions","filter","item","id","payload","map","transactionsFromStorage","localStorage","getItem","initialState","JSON","parse","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","useEffect","setItem","stringify","Provider","value","delTransaction","editTransaction","transaction","addTransaction","Header","Balance","total","useContext","amount","reduce","acc","val","toFixed","className","IncomeExpenses","amounts","income","expense","Transaction","sign","currDt","Date","minDate","getFullYear","maxDate","getMonth","getDate","text","Math","abs","date","onClick","event","e","li","target","closest","amountField","querySelector","textField","dateField","btn","classList","innerText","innerHTML","Number","replace","textInput","amountInput","isNaN","dateInput","editedTransaction","toggle","editSelected","TransactionList","AddTransaction","useState","setText","setAmount","dt","setDate","onSubmit","preventDefault","includes","document","style","display","setTimeout","newTransaction","v4","htmlFor","onChange","placeholder","min","max","to","ChartComponent","incomes","expenses","incomesArr","expensesArr","forEach","slice","annualIncomesExpenses","data","labels","datasets","label","backgroundColor","hoverBackgroundColor","options","maintainAspectRatio","responsive","App","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d9810684.chunk.js","sourcesContent":["const AppReducer = (state, action) => {\r\n  switch(action.type) {\r\n    case 'DELETE':\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions\r\n        .filter(item => item.id !== action.payload)\r\n      }\r\n    case 'EDIT':\r\n      return {\r\n        ...state,\r\n        transactions: \r\n          state.transactions\r\n          .map(item => {\r\n            if (item.id === action.payload.id) item = action.payload;\r\n            return item;\r\n          })\r\n      }\r\n    case 'ADD':\r\n      return {\r\n        ...state,\r\n        transactions: [action.payload, ...state.transactions] \r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default AppReducer","import React, { createContext, useReducer, useEffect } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n\r\nconst transactionsFromStorage = localStorage.getItem('transactions');\r\nconst initialState = {\r\n  transactions: transactionsFromStorage ? JSON.parse(transactionsFromStorage) : []\r\n};\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n  \r\n  useEffect( () => {\r\n    localStorage.setItem('transactions', JSON.stringify(state.transactions))\r\n  }, [state.transactions]);\r\n  \r\n  function delTransaction(id) {\r\n    dispatch({\r\n      type: 'DELETE',\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  function editTransaction(transaction) {\r\n    dispatch({\r\n      type: 'EDIT',\r\n      payload: transaction\r\n    });\r\n  }\r\n\r\n  function addTransaction(transaction) {\r\n    dispatch({\r\n      type: 'ADD',\r\n      payload: transaction\r\n    });\r\n  }\r\n\r\n  return <GlobalContext.Provider value={{\r\n    transactions: state.transactions,\r\n    delTransaction,\r\n    editTransaction,\r\n    addTransaction\r\n  }}>\r\n    { children }\r\n  </GlobalContext.Provider>\r\n\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <header>Money tracker</header>\r\n  )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n\r\nexport const Balance = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n  const amounts = transactions.map( transaction => transaction.amount );\r\n  const total = amounts.reduce( ((acc, val) => acc += val), 0 ).toFixed(2);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"budget\">\r\n        <h4>Your Budget</h4>\r\n        <h2>${total}</h2>\r\n      </div>\r\n      \r\n    </>\r\n  )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { Balance } from './Balance';\r\n\r\n\r\nexport const IncomeExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n  const income = amounts\r\n  .filter(amount => amount > 0)\r\n  .reduce(((acc, val) => acc += val), 0)\r\n  .toFixed(2);\r\n\r\n  const expense = amounts\r\n  .filter(amount => amount < 0)\r\n  .reduce(((acc, val) => acc += val), 0) * -1\r\n  .toFixed(2);\r\n\r\n\r\n  return (\r\n    <div className=\"inc-exp-balance\">\r\n      <div>\r\n        <div>\r\n          <h4>Total Income</h4>\r\n          <p className=\"money plus\">${income}</p>\r\n        </div>\r\n        <div>\r\n          <h4>Total Expense</h4>\r\n          <p className=\"money minus\">${expense}</p>\r\n        </div>\r\n      </div>\r\n      <Balance />\r\n    </div>\r\n  )\r\n}\r\n","import React, {useContext} from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n  const { delTransaction, editTransaction } = useContext(GlobalContext);\r\n  const sign = transaction.amount < 0 ? '-' : '+';\r\n  const currDt = new Date();\r\n  const minDate = `${currDt.getFullYear()}-01-01`;\r\n  const maxDate = `${currDt.getFullYear()}-${currDt.getMonth() + 1}-${currDt.getDate()}`;\r\n\r\n  const editSelected = e => { \r\n    const li = e.target.closest('li');\r\n    const amountField = li.querySelector('.transaction-amount');\r\n    const textField = li.querySelector('.transaction-text');\r\n    const dateField = li.querySelector('.transaction-date');\r\n\r\n    const btn = e.target.closest('button');\r\n\r\n    if (btn.classList.value !== 'edit-btn toggled'){\r\n      btn.querySelector('span').innerText = 'done';\r\n\r\n      textField.innerHTML = `<input type=\"text\" value=\"${textField.innerHTML}\" />`;\r\n      amountField.innerHTML = `<input type=\"text\" value=\"${Number(amountField.innerHTML.replace('$', ''))}\" />`;\r\n      dateField.innerHTML = `<input type=\"date\" min=\"${minDate}\" max=\"${maxDate}\" value=\"${dateField.innerHTML}\" />`;\r\n    } else {\r\n      const textInput = textField.querySelector('input').value\r\n      let amountInput = amountField.querySelector('input').value\r\n      if ( isNaN(+amountInput) ) amountInput = '0';\r\n      const dateInput = dateField.querySelector('input').value\r\n\r\n      const editedTransaction = {\r\n        id: transaction.id,\r\n        text: textInput,\r\n        amount: +amountInput,\r\n        date: dateInput\r\n      }\r\n\r\n      btn.querySelector('span').innerText = 'create'\r\n\r\n      textField.innerText = textInput === '' ? 'UNNAMED' : textInput;\r\n    \r\n      amountField.innerText = +amountInput < 0 ? '-$' + Math.abs(amountInput) : '+$' + amountInput;\r\n      dateField.innerText = dateInput;\r\n\r\n      editTransaction(editedTransaction);\r\n    }\r\n    btn.classList.toggle('toggled');\r\n  }\r\n\r\n  return (\r\n    <li className={sign === '-' ? 'item minus' : 'item plus'}>\r\n      <div className=\"transaction-text\">\r\n        {transaction.text === '' ? 'UNNAMED' : transaction.text}\r\n      </div>\r\n      <div className=\"transaction-amount\">{sign}${Math.abs(transaction.amount)}</div>\r\n      <div className=\"transaction-date\">{transaction.date}</div>\r\n      \r\n      <button onClick={() => delTransaction(transaction.id)} className=\"delete-btn\">\r\n        <span className=\"material-icons\">clear</span>\r\n      </button>\r\n      <button onClick={(event) => editSelected(event)} className=\"edit-btn\">\r\n        <span className=\"material-icons\">create</span>\r\n      </button>\r\n    </li>\r\n  )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { Transaction } from './Transaction';\r\n\r\n\r\nexport const TransactionList = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"list\">\r\n        {transactions.map(transaction => (\r\n          <Transaction key={transaction.id} transaction={transaction} />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n","import React, {useState, useContext} from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { v4 } from 'uuid';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nexport const AddTransaction = () => {\r\n  const [text, setText] = useState('');\r\n  const [amount, setAmount] = useState(0);\r\n  const [date, setDate] = useState(() => {\r\n    const dt = new Date();\r\n    return `${dt.getFullYear()}-${dt.getMonth() + 1}-${dt.getDate()}`;\r\n  });\r\n\r\n  const { addTransaction } = useContext(GlobalContext);\r\n  \r\n  const currDt = new Date();\r\n  const minDate = `${currDt.getFullYear()}-01-01`;\r\n  const maxDate = `${currDt.getFullYear()}-${currDt.getMonth() + 1}-${currDt.getDate()}`;\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    \r\n    if ( ['0', 0].includes(amount) ) {\r\n      document.querySelector('.amount-field p').style.display = 'block';\r\n      setTimeout((() => {\r\n        document.querySelector('.amount-field p').style.display = 'none'\r\n      }), 2000);\r\n      return;\r\n    } else {\r\n      document.querySelector('.amount-field p').style.display = 'none';\r\n      const newTransaction = {\r\n        id: v4(),\r\n        text,\r\n        amount: +amount,\r\n        date: date\r\n      }\r\n\r\n      addTransaction(newTransaction);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form className=\"add-action\" onSubmit={onSubmit}>\r\n        <div className=\"text-field\">\r\n          <label htmlFor=\"text\">NAME</label>\r\n          <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...\" />\r\n        </div>\r\n        <div className=\"amount-date-wrapper\">\r\n          <div className=\"amount-field\">\r\n            <label htmlFor=\"amount\">AMOUNT</label>\r\n            <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\r\n            <p>Amount</p>\r\n          </div>\r\n          <div className=\"date-field\">\r\n            <label htmlFor=\"date\">DATE</label>\r\n            <input type=\"date\" value={date} min={minDate} max={maxDate} onChange={(e) => setDate(e.target.value)} />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-btn\">\r\n        <button className=\"btn\"><span className=\"btn-add\">ADD</span><span className=\"btn-check\">&#10003;</span></button>\r\n        </div>\r\n      </form>\r\n\r\n      <nav className=\"navbar\">\r\n      <NavLink to=\"/\">Past Transactions</NavLink>\r\n      <NavLink to=\"/chart\">Chart</NavLink>\r\n      </nav>\r\n    </>\r\n  )\r\n}\r\n","import React, {useContext} from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n\r\nexport const ChartComponent = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  let incomes = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n  let expenses = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n  annualIncomesExpenses(incomes, expenses, transactions);  \r\n\r\n  return (\r\n   <div className=\"chart-wrapper\">\r\n    <Bar\r\n      data = {{\r\n        labels: ['Jan', 'Feb', 'Mar', \r\n                 'Apr', 'May', 'Jun', \r\n                 'Jul', 'Aug', 'Sep', \r\n                 'Oct', 'Nov', 'Dec'\r\n                ],\r\n        datasets: [{\r\n          label: 'Income',\r\n          backgroundColor: '#00cc44',\r\n          hoverBackgroundColor: '#009933',\r\n          data: incomes\r\n          },\r\n          {\r\n            label: 'Expense',\r\n            backgroundColor: '#ff6666',\r\n            hoverBackgroundColor: '#ff3333',\r\n            data: expenses\r\n          }\r\n      ]}}\r\n      options = {{\r\n        maintainAspectRatio: false,\r\n        responsive: true\r\n        }}\r\n      // height={\"20vw\"}\r\n      // width={\"100%\"}\r\n     />\r\n</div>\r\n  )\r\n}\r\n\r\n\r\nfunction annualIncomesExpenses(incomesArr, expensesArr, transactions) {\r\n  transactions.forEach(item => {\r\n    if (item.amount > 0) {\r\n      incomesArr[+item.date.slice(5, 7) - 1] += item.amount;\r\n    }\r\n  });\r\n    transactions.forEach(item => {\r\n      if (item.amount < 0) {\r\n        expensesArr[+item.date.slice(5, 7) - 1] += item.amount * -1;\r\n      } \r\n    });\r\n}","import './App.css';\nimport { Header } from './components/Header';\nimport { IncomeExpenses } from './components/IncomeExpenses';\nimport { TransactionList } from './components/TransactionList';\nimport { AddTransaction } from './components/AddTransaction';\nimport { ChartComponent } from './components/Chart';\nimport { HashRouter, Route } from 'react-router-dom';\n\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Header />\n      <div className=\"container\">\n        <IncomeExpenses />\n        <AddTransaction />\n        <Route exact path='/' component={TransactionList} />\n        <Route path='/chart' component={ChartComponent} />\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GlobalProvider } from './context/GlobalState';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalProvider>\n      <App />\n    </GlobalProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}